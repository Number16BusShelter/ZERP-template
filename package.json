{
  "name": "zerp",
  "private": true,
  "version": "0.0.1",
  "description": "ZERP monorepo",
  "repository": {
    "type": "git",
    "url": "https://github.com/Number16BusShelter/ZERP-template"
  },
  "bugs": {
    "url": "https://github.com/Number16BusShelter/ZERP-template/issues"
  },
  "type": "module",
  "packageManager": "pnpm@9.1.1",
  "engines": {
    "node": ">=18.20.0",
    "nodemon": ">=3.1.0",
    "pnpm": ">=9"
  },
  "workspaces": {
    "packages": [
      "packages/*",
      "apps/*",
      "services/*"
    ],
    "nohoist": [
      "packages/*",
      "apps/*",
      "services/*"
    ]
  },
  "scripts": {
    "boot": "bash ./scripts/bash/bootstrap.sh",
    "list": "pnpm list --recursive",
    "list:projects": "pnpm list --recursive --only-projects",
    "start:all": "pnpm run -r --parallel start --reporter=append-only",
    "start": "echo \"Error: can not start from workspace root!\" && exit 1",
    "test": "",
    "dev": "pnpm run pnpm:dev",
    "build": "pnpm turbo:build",
    "compile": "tsc -b -w -i",
    "depcheck": "pnpm run pnpm:run:all pnpx depcheck",
    "typesync": "pnpm run pnpm:run:all pnpx typesync",
    "audit": "pnpm audit",
    "snyk": "pnpx snyk test --all-projects",
    "audit:fix": "pnpm audit --fix",
    "lint": "eslint",
    "lint:fix": "eslint --fix",
    "cleanup": "npx rimraf -g \"./**/lib\" \"./**/*.tsbuildinfo\" \"\"./**/.turbo\"\" \"./**/node_modules/**\" \"./**/bin/**\" \"./**/dist/**\" \"./**/build/**\"",
    "update:all": "pnpm run -r pnpm update",
    "pnpm:run:all": "pnpm -r exec --",
    "turbo:build": "pnpx turbo build",
    "turbo:dev": "pnpx turbo build -- -w",
    "pnpm:dev": "pnpm --stream -r --parallel --reporter=append-only run build -w -i",
    "pnpm:build": "pnpm --stream -r --reporter=append-only run build",
    "nodemon:dev": "nodemon --watch src --exec \"tsc -b -w -i\"",
    "git:submodule:update": "git submodule update --init",
    "git:submodule:pull": "git submodule update --recursive --remote",
    "service:api": "pnpm --filter ./services/api",
    "service:tgbot": "pnpm --filter ./services/api",
    "service:onchain": "pnpm --filter ./services/onchain",
    "api": "pnpm run service:api start",
    "tgbot:dev": "pnpm run -w tgbot dev",
    "tgbot:prod": "pnpm run -w tgbot start",
    "onchain:dev": "pnpm run -w onchain dev",
    "orm:migrations:run": "pnpm --filter  @zerp/db orm:migrations:run",
    "orm:migrations:create": "pnpm --filter  @zerp/db orm:migrations:create",
    "orm:migrations:generate": "pnpm --filter  @zerp/db orm:migrations:generate",
    "orm:migrations:revert": "pnpm --filter  @zerp/db orm:migrations:revert",
    "docker:build": "pnpm run docker:prod:build -- ",
    "docker:scan": "docker scan",
    "docker:deploy": "git pull && pnpm run docker:prod:stop && pnpm run docker:prod:build && pnpm run docker:prod:start",
    "docker:migrate": "docker exec -it api npm run script:migrate",
    "docker:cleanup": "docker builder prune -a -f && docker rmi $(docker images -a) && docker rm $(docker ps -a -q)",
    "docker:local": "env $(cat ./cicd/environment/.env | xargs) docker compose -f ./cicd/.docker/compose/docker-compose.yml",
    "docker:local:start": "env $(cat ./cicd/environment/.env | xargs) docker compose -f ./cicd/.docker/compose/docker-compose.yml up -d",
    "docker:local:build": "pnpm run docker:local build",
    "docker:local:stop": "pnpm run docker:local down",
    "docker:local:restart": "pnpm run docker:local:stop && pnpm run docker:local:build && pnpm run docker:local:start",
    "docker:static:start": "env $(cat ./cicd/environment/.env.prod | xargs) docker compose -f ./cicd/.docker/compose/docker-compose.static.yml up -d",
    "docker:static:stop": "env $(cat ./cicd/environment/.env.prod | xargs) docker compose -f ./cicd/.docker/compose/docker-compose.static.yml down",
    "docker:prod": "env $(cat ./cicd/environment/.env.prod | xargs) docker compose -f ./cicd/.docker/compose/docker-compose.prod.yml",
    "docker:prod:start": "env $(cat ./cicd/environment/.env.prod | xargs) docker compose -f ./cicd/.docker/compose/docker-compose.prod.yml up -d",
    "docker:prod:build": "pnpm run docker:prod build",
    "docker:prod:stop": "pnpm run docker:prod down",
    "docker:prod:restart": "pnpm run docker:local:stop && pnpm run docker:local:build && pnpm run docker:local:start"
  },
  "devDependencies": {
    "@tsconfig/node18": "^18.2.4",
    "@types/chai": "^4.3.14",
    "@types/color": "^3.0.6",
    "@types/eslint": "~8.56.10",
    "@types/eslint-config-prettier": "~6.11.3",
    "@types/mocha": "^10.0.6",
    "@types/node": "^20.12.11",
    "@types/source-map-support": "~0.5.10",
    "@typescript-eslint/eslint-plugin": "^7.13.0",
    "@typescript-eslint/parser": "^7.13.1",
    "chai": "^5.1.0",
    "eslint": "^8.57.0",
    "eslint-config-airbnb": "^19.0.4",
    "eslint-config-airbnb-typescript": "^18.0.0",
    "eslint-config-prettier": "^9.1.0",
    "eslint-plugin-airbnb-base": "0.0.1-security",
    "eslint-plugin-import": "^2.29.1",
    "eslint-plugin-prettier": "^5.1.3",
    "eslint-plugin-simple-import-sort": "^12.1.0",
    "mocha": "^10.4.0",
    "prettier": "^3.2.5",
    "source-map-support": "^0.5.21",
    "ts-loader": "^9.5.1",
    "ts-node": "^10.9.2",
    "tsconfig-paths": "^4.2.0",
    "turbo": "^2.1.1",
    "typescript": "^5.4.5"
  },
  "dependencies": {
    "@swc/core": "^1.5.6",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.14.1",
    "cross-env": "^7.0.3",
    "dotenv": "^16.4.5",
    "rimraf": "^5.0.5"
  },
  "keywords": [
    "template",
    "zerp",
    "monorepo"
  ],
  "author": "Number16BusShelter",
  "license": "ISC"
}
